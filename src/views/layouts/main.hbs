<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat</title>
 const socket = io();
let user;
let askingForName = true;

function scrollToBottom() {
  const chatMessages = document.getElementById("chat-messages");
  chatMessages.scrollTop = chatMessages.scrollHeight;
}

function askForNameAndSendMessage(message) {
  Swal.fire({
    title: "Hola",
    text: "Ingresa tu nombre para continuar",
    input: "text",
    inputValidator: (value) => {
      return !value && "Â¡Ingresa tu nombre!";
    },
    allowOutsideClick: false,
  }).then((value) => {
    user = value.value;
    socket.emit("newUser", user);
    askingForName = false;
    if (message.trim() !== "") {
      socket.emit("message", {
        user,
        message,
      });
    }
  });
}

askForNameAndSendMessage(""); // Llamar al inicio para solicitar el nombre

const chatbox = document.getElementById("chatbox");
chatbox.addEventListener("keyup", (e) => {
  if (e.key === "Enter") {
    const message = e.target.value;
    if (user === undefined && !askingForName) {
      askForNameAndSendMessage(message);
      chatbox.value = "";
    } else {
      if (message.trim() !== "") {
        socket.emit("message", {
          user,
          message,
        });
        chatbox.value = "";
      }
    }
  }
});

socket.on("userConnected", (username) => {
  if (user !== undefined && !askingForName) {
    Swal.fire({
      position: "top-right",
      toast: true,
      title: "Nuevo usuario",
      text: `${username} se ha conectado al chat`,
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.addEventListener("mouseenter", () => {
          Swal.stopTimer();
        });
        toast.addEventListener("mouseleave", Swal.resumeTimer);
      },
    });
  }
});

socket.on("messages", (data) => {
  const log = document.querySelector("#messages");
  let messages = "";

  data.forEach((message) => {
    messages += `<strong>${message.user}</strong>: ${message.message} <br/>`;
  });

  log.innerHTML = messages;
  scrollToBottom();
});

</head>
<body>
  
  {{{ body }}}
  
</body>
</html>
